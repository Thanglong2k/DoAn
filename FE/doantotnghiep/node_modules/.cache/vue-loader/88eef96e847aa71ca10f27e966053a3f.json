{"remainingRequest":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\src\\components\\client\\views\\product-detail\\comment\\comment.vue?vue&type=style&index=0&id=471e2198&scoped=true&lang=css&","dependencies":[{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\src\\components\\client\\views\\product-detail\\comment\\comment.vue","mtime":1654006475117},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnNlbmQtYnRuIHsNCiAgQGFwcGx5IHR3LWJnLXJlZC01MDAgdHctdGV4dC13aGl0ZSB0dy1hYnNvbHV0ZSB0dy1yaWdodC00IHR3LXRvcC00ICFpbXBvcnRhbnQ7DQp9DQo="},{"version":3,"sources":["comment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmUA;AACA;AACA","file":"comment.vue","sourceRoot":"src/components/client/views/product-detail/comment","sourcesContent":["<template>\r\n  <div class=\"comment-container tw-mt-4\">\r\n    <area-card :title=\"$t('DetailProduct.Comment', { number: commentTotal })\">\r\n      <div class=\"comment-area tw-relative\">\r\n        <el-input\r\n          type=\"textarea\"\r\n          :autosize=\"{ minRows: 3 }\"\r\n          :placeholder=\"$t('DetailProduct.WriteComment')\"\r\n          v-model=\"commentContent\"\r\n        >\r\n        </el-input>\r\n        <v-btn @click=\"onSendComment\" class=\"send-btn\">{{\r\n          $t(\"Button.Comment\")\r\n        }}</v-btn>\r\n        <span class=\"text-error\" v-if=\"showCommentError\"\r\n          >Mời viết bình luận (tối thiểu 3 kí tự)</span\r\n        >\r\n      </div>\r\n      <!-- Danh sách đánh giá của khách hàng -->\r\n      <div class=\"comment-result tw-mt-6\">\r\n        <div class=\"comment-list\">\r\n          <div\r\n            class=\"comment-item\"\r\n            v-for=\"item in comments\"\r\n            :key=\"item.Comment.CommentID\"\r\n          >\r\n            <div class=\"parent-comment tw-flex tw-mb-4\">\r\n              <div class=\"avatar-area tw-w-16 tw-h-16 tw-mr-4\">\r\n                <el-avatar shape=\"square\">\r\n                  {{ nameAvatar(item.CustomerName?item.CustomerName:item.AccountName) }}\r\n                </el-avatar>\r\n              </div>\r\n              <div class=\"comment-info tw-flex-1\">\r\n                <div class=\"user-name tw-font-semibold\">\r\n                  {{ item.CustomerName }}\r\n                </div>\r\n                <div class=\"comment-time tw-text-xs tw-text-gray-400\">\r\n                  {{$commonFn.setCommentTime(item.Comment.CreatedDate)}}\r\n                </div>\r\n                <div class=\"content\">\r\n                  {{ item.Comment.Content }}\r\n                </div>\r\n                <div\r\n                  class=\"\r\n                    content\r\n                    tw-text-xs\r\n                    mt-2\r\n                    tw-cursor-pointer tw-text-blue-400\r\n                    tw-flex\r\n                  \"\r\n                  \r\n                >\r\n                <div class=\"reply\" @click=\"replyComment(item.Comment.CommentID)\">\r\n\r\n                  Trả lời\r\n                </div>\r\n                <div class=\"show-reply tw-ml-6\" @click=\"onShowReply(item.Comment.CommentID)\" v-if=\"item.Comment.ChildComment.length>0\">\r\n                  {{showReply===item.Comment.CommentID?\"Ẩn bình luận\":\"Hiện bình luận\"}}\r\n                </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"comment-reply-area tw-relative tw-ml-10 tw-mb-4\"\r\n              v-if=\"commentSelectedReply===item.Comment.CommentID\"\r\n            >\r\n              <el-input\r\n                type=\"textarea\"\r\n                :autosize=\"{ minRows: 3 }\"\r\n                :placeholder=\"$t('DetailProduct.WriteComment')\"\r\n                v-model=\"replyContent\"\r\n              >\r\n              </el-input>\r\n              <v-btn @click=\"onSendReply\" class=\"send-btn\">{{\r\n                $t(\"Button.Comment\")\r\n              }}</v-btn>\r\n              <span class=\"text-error\" v-if=\"showReplyError\"\r\n                >Mời viết bình luận (tối thiểu 3 kí tự)</span\r\n              >\r\n            </div>\r\n            <div class=\"child-comment\"\r\n            v-if=\"showReply===item.Comment.CommentID\"\r\n            >\r\n\r\n              <div\r\n                class=\" child-item tw-flex tw-ml-10 tw-mb-4\"\r\n                v-for=\"child in item.Comment.ChildComment\"\r\n                :key=\"child.Comment.CategoryID\"\r\n              >\r\n                <div class=\"avatar-area tw-w-16 tw-h-16 tw-mr-4\">\r\n                  <el-avatar shape=\"square\">\r\n                    {{ nameAvatar(child.CustomerName?child.CustomerName:child.AccountName) }}\r\n                  </el-avatar>\r\n                </div>\r\n                <div class=\"comment-info tw-flex-1\">\r\n                  <div class=\"user-name tw-font-semibold\">\r\n                    {{ child.CustomerName?child.CustomerName:(child.AccountName+\" (Admin)\") }}\r\n                  </div>\r\n                  <div class=\"comment-time tw-text-xs tw-text-gray-400\">\r\n                    {{$commonFn.setCommentTime(child.Comment.CreatedDate)}}\r\n                  </div>\r\n                  <div class=\"content\">\r\n                    {{ child.Comment.Content }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"panigation\">\r\n          <v-pagination\r\n            v-if=\"pageTotal > 1\"\r\n            v-model=\"pageIndex\"\r\n            :length=\"pageTotal\"\r\n            :total-visible=\"7\"\r\n          ></v-pagination>\r\n        </div>\r\n      </div>\r\n    </area-card>\r\n    <CommentCustomerInfoPopup\r\n      ref=\"popup\"\r\n      @saveComment=\"saveComment\"\r\n      title=\"Hoàn thành gửi bình luận\"\r\n      :content=\"commentContent\"\r\n      :type=\"$enumeration.CustomerInfoPopup.Comment\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AreaCard from \"@/components/controls/area-card\";\r\nimport CommentCustomerInfoPopup from \"../popup/customer-info-popup.vue\";\r\nimport { mapState, mapActions, mapMutations } from \"vuex\";\r\nexport default {\r\n  components: {\r\n    AreaCard,\r\n    CommentCustomerInfoPopup,\r\n  },\r\n  props: {\r\n    product: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      commentContent: \"\",\r\n      replyContent: \"\",\r\n      showCommentError: false,\r\n      showReplyError: false,\r\n      showReply: '',\r\n      pageIndex: 1,\r\n      pageSize: 5,\r\n      commentSelectedReply: \"\",\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(\"comment\", [\"comments\", \"pageTotal\", \"commentTotal\"]),\r\n    ...mapState(\"customer\", [\"customer\"]),\r\n  },\r\n  async mounted() {\r\n    const me = this;\r\n    me.$commonFn.showMark(\"comment-container\")\r\n\r\n    await me.getCommentOfProduct(1);\r\n            me.$commonFn.hideMark(\"comment-container\")\r\n  },\r\n  methods: {\r\n    ...mapActions(\"comment\", [\r\n      \"getCommentByProductID\",\r\n      \"insertCommentOfProduct\",\r\n    ]),\r\n    ...mapActions(\"customer\", [\"getCustomerByPhoneNumber\", \"insertCustomer\"]),\r\n    ...mapMutations(\"comment\", [\"setContentComment\"]),\r\n    //set avatar bình luận cho người dùng\r\n    nameAvatar(name) {\r\n      return this.$commonFn.takeTheFirstLetter(name);\r\n    },\r\n    \r\n    /**\r\n     * lưu bình luận\r\n     */\r\n    async saveComment(modelForm) {\r\n      const me = this;\r\n      await me.getCustomerByPhoneNumber({ phoneNumber: modelForm.PhoneNumber });\r\n      if (!me.customer) {\r\n        const paramCustomer = {\r\n          CustomerName: modelForm.FullName,\r\n          Email: modelForm.Email,\r\n          PhoneNumber: modelForm.PhoneNumber,\r\n        };\r\n        await me\r\n          .insertCustomer(paramCustomer)\r\n          .then(async (res) => {\r\n            \r\n            await me.getCustomerByPhoneNumber({ phoneNumber: modelForm.PhoneNumber });\r\n            \r\n          })\r\n          .catch((e) => {\r\n            const h = this.$createElement;\r\n\r\n            this.$notify.error({\r\n              title: me.$t(\"Notify.Error\"),\r\n              message: h(\r\n                \"i\",\r\n                { style: \"color: teal\" },\r\n                me.$t(\"Notify.HasError\")\r\n              ),\r\n            });\r\n          });\r\n      }\r\n      const paramComment = {\r\n        ProductAttributeID: me.product.ProductAttributeID,\r\n        CustomerID: me.customer.CustomerID,\r\n        \r\n        ParentCommentID:me.commentSelectedReply?me.commentSelectedReply:undefined\r\n      };\r\n      if(me.commentSelectedReply!==''){\r\n        paramComment.Content= me.replyContent\r\n      }else{\r\n        paramComment.Content= me.commentContent\r\n      }\r\n      const h = this.$createElement;\r\n      await me\r\n        .insertCommentOfProduct(paramComment)\r\n        .then(async (res) => {\r\n          me.$commonFn.showMark(\"comment-container\")\r\n            me.modelForm={}\r\n            me.commentContent=''\r\n\r\n    await me.getCommentOfProduct(1);\r\n            me.$commonFn.hideMark(\"comment-container\")\r\n          this.$notify({\r\n            title: me.$t(\"Notify.Success\"),\r\n            message: h(\r\n              \"i\",\r\n              { style: \"color: teal\" },\r\n              me.$t(\"Notify.InsertSuccess\", { object: \"bình luận\" })\r\n            ),\r\n            type: \"success\",\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          this.$notify.error({\r\n            title: me.$t(\"Notify.Error\"),\r\n            message: h(\"i\", { style: \"color: teal\" }, me.$t(\"Notify.HasError\")),\r\n          });\r\n        });\r\n    },\r\n    /**\r\n     * Lấy danh sách bình luận của sản phẩm\r\n     */\r\n    getCommentOfProduct(pageIndex) {\r\n      const me = this;\r\n      const params = {\r\n        productAttributeID: me.product.ProductAttributeID,\r\n        pageindex: pageIndex,\r\n        pageSize: me.pageSize,\r\n      };\r\n      me.getCommentByProductID(params);\r\n    },\r\n    /**\r\n     * Gửi bình luận\r\n     */\r\n    onSendComment() {\r\n      const me = this;\r\n      if (me.commentContent.length < 3) {\r\n        me.showCommentError = true;\r\n      }\r\n      if (!me.showCommentError) {\r\n        me.setContentComment(me.content);\r\n        me.$refs.popup.setModel(true);\r\n      }\r\n    },\r\n    onSendReply() {\r\n      const me = this;\r\n      if (me.replyContent.length < 3) {\r\n        me.showReplyError = true;\r\n      }\r\n      if (!me.showReplyError) {\r\n        me.setContentComment(me.content);\r\n        me.$refs.popup.setModel(true);\r\n      }\r\n    },\r\n    replyComment(commentID) {\r\n      const me=this\r\n      me.commentSelectedReply = commentID;\r\n    },\r\n    onShowReply(commentID) {\r\n      const me=this\r\n      if(me.showReply !== commentID){\r\n\r\n        me.showReply = commentID;\r\n      }else{\r\n        me.showReply=''\r\n      }\r\n    },\r\n    \r\n  },\r\n  watch: {\r\n    commentContent(newVal) {\r\n      const me = this;\r\n      if (newVal.length >= 3) {\r\n        me.showCommentError = false;\r\n      }\r\n    },\r\n    replyContent(newVal) {\r\n      const me = this;\r\n      if (newVal.length >= 3) {\r\n        me.showReplyError = false;\r\n      }\r\n    },\r\n    async pageIndex() {\r\n      const me = this;\r\n      me.$commonFn.showMark(\"comment-container\")\r\n\r\n    await me.getCommentOfProduct(me.pageIndex);\r\n            me.$commonFn.hideMark(\"comment-container\")\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.send-btn {\r\n  @apply tw-bg-red-500 tw-text-white tw-absolute tw-right-4 tw-top-4 !important;\r\n}\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n.comment-container {\r\n  .comment-area {\r\n    .text-error {\r\n      color: red;\r\n      font-size: 13px;\r\n    }\r\n  }\r\n  .comment-result {\r\n    .comment-list {\r\n      .comment-item {\r\n        .child-item{\r\n          border-left:4px solid rgb(132, 129, 129);\r\n          padding-left:12px;\r\n        }\r\n        .avatar-area {\r\n          .el-avatar {\r\n            height: 100%;\r\n            width: 100%;\r\n            line-height: 64px;\r\n            font-size: 20px;\r\n          }\r\n        }\r\n        .comment-info {\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]}]}