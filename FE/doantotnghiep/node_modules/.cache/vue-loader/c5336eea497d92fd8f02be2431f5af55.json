{"remainingRequest":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\src\\components\\client\\views\\product-detail\\popup\\customer-info-popup.vue?vue&type=style&index=0&id=73ad8d7e&scoped=true&lang=css&","dependencies":[{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\src\\components\\client\\views\\product-detail\\popup\\customer-info-popup.vue","mtime":1653296269274},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouc2VuZC1idG4gew0KICBAYXBwbHkgdHctYmctcmVkLTUwMCB0dy10ZXh0LXdoaXRlICFpbXBvcnRhbnQ7DQp9DQo="},{"version":3,"sources":["customer-info-popup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA;AACA;AACA","file":"customer-info-popup.vue","sourceRoot":"src/components/client/views/product-detail/popup","sourcesContent":["<template>\r\n  <el-dialog\r\n    ref=\"dialog\"\r\n    :title=\"title\"\r\n    :visible.sync=\"modelDialog\"\r\n  >\r\n    <template #default>\r\n      <el-form\r\n        :model=\"modelForm\"\r\n        :rules=\"rules\"\r\n        ref=\"ruleForm\"\r\n        label-width=\"120px\"\r\n        label-position=\"top\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item :label=\"$t('Input.FullName')\" prop=\"FullName\">\r\n          <!-- <label>{{$t('Input.FullName')}}<span class=\"tw-text-red-400\">*</span></label> -->\r\n          <el-input\r\n            v-model=\"modelForm.FullName\"\r\n            :placeholder=\"$t('Input.FullNameInput')\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('Input.PhoneNumber')\" prop=\"PhoneNumber\">\r\n          <!-- <label>{{$t('Input.PhoneNumber')}}<span class=\"tw-text-red-400\">*</span></label> -->\r\n          <el-input\r\n            v-model=\"modelForm.PhoneNumber\"\r\n            :placeholder=\"$t('Input.PhoneNumberInput')\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('Input.Email')\" prop=\"Email\">\r\n          <!-- <label>{{$t('Input.Email')}}</label> -->\r\n          <el-input\r\n            v-model=\"modelForm.Email\"\r\n            :placeholder=\"$t('Input.EmailInput')\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n    </template>\r\n    <template #footer>\r\n      <el-button @click=\"sendReview\" class=\"send-btn\">{{\r\n        $t(\"Button.Send\")\r\n      }}</el-button>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions, mapMutations } from \"vuex\";\r\nexport default {\r\n  props: {\r\n    show: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    title:{\r\n      type:String,\r\n      default:\"\"\r\n    },\r\n    type:{\r\n      type:Number,\r\n      default:0\r\n    }\r\n  },\r\n  data() {\r\n    // var validateEmail = (rule, value, callback) => {\r\n    //   const regex=/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    //     if (value !== ''&& !value.match(regex)) {\r\n    //       callback(new Error('Bạn đã nhập sai định dạng Email'));\r\n    //     }\r\n    //   };\r\n    return {\r\n      modelDialog: this.show,\r\n      modelForm: {\r\n        FullName: \"\",\r\n        PhoneNumber: \"\",\r\n        Email: \"\",\r\n      },\r\n      rules: {\r\n        FullName: [\r\n          { required: true, message: \"Hãy nhập thông tin!\", trigger: \"blur\" },\r\n          { min: 3, message: \"Tên tối thiểu 3 kí tự\", trigger: \"blur\" },\r\n        ],\r\n        PhoneNumber: [\r\n          { required: true, message: \"Hãy nhập thông tin!\", trigger: \"blur\" },\r\n        ],\r\n        Email: [\r\n          // {validator:validateEmail,trigger: 'blur'}\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(\"evaluation\", [\"valueRating\", \"contentRating\"]),\r\n    ...mapState(\"product\", [\"product\"]),\r\n    ...mapState(\"order\", [\r\n      \"isCheckCustomerPurchasedProduct\",\r\n      \"customerIDPurchased\",\r\n    ]),\r\n  },\r\n  created(){\r\n    const me=this\r\n    const customerInfo=JSON.parse(sessionStorage.getItem(\"Customer\"))\r\n          if(customerInfo){\r\n            me.modelForm=JSON.parse(sessionStorage.getItem(\"Customer\"))\r\n          }\r\n  },\r\n  methods: {\r\n    ...mapActions(\"order\", [\"checkCustomerPurchasedProduct\"]),\r\n    ...mapActions(\"evaluation\", [\"insertReviewOfProuct\"]),\r\n    setModel() {\r\n      const me = this;\r\n      me.modelDialog = true;\r\n    },\r\n    /**\r\n     * Gửi đánh giá\r\n     */\r\n    async sendReview() {\r\n      const me = this;\r\n      me.$refs[\"ruleForm\"].validate(async (valid) => {\r\n        if (valid) {\r\n          if(me.type===me.$enumeration.CustomerInfoPopup.Review){\r\n\r\n            me.$emit('saveReview',me.modelForm)\r\n          }else{\r\n            me.$emit('saveComment',me.modelForm)\r\n          }\r\n          const customerInfo=JSON.parse(sessionStorage.getItem(\"Customer\"))\r\n          if(!customerInfo){\r\n            sessionStorage.setItem(\"Customer\",JSON.stringify(me.modelForm))\r\n          }\r\n\r\n          me.modelDialog = false;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.send-btn {\r\n  @apply tw-bg-red-500 tw-text-white !important;\r\n}\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n::v-deep {\r\n  .el-dialog__body {\r\n    padding-top: 14px;\r\n  }\r\n}\r\n</style>"]}]}