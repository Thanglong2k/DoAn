{"remainingRequest":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\src\\components\\client\\components\\product-cart\\index.vue?vue&type=style&index=0&id=510a03b4&scoped=true&lang=css&","dependencies":[{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\src\\components\\client\\components\\product-cart\\index.vue","mtime":1652529951246},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLm9yZGVyLWJ0biB7DQogIEBhcHBseSB0dy1iZy1yZWQtNTAwIHR3LXRleHQtd2hpdGUgIWltcG9ydGFudDsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsRA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/client/components/product-cart","sourcesContent":["<template>\r\n  <div class=\"cart tw-w-full\">\r\n    <div\r\n      class=\"cart-container tw-w-full tw-mx-auto tw-px-6 tw-bg-white tw-py-4\"\r\n      v-if=\"productCart && productCart.length > 0\"\r\n    >\r\n      <div class=\"cart-header tw-h-12 tw-text-xl tw-font-semibold\">\r\n        Có {{ productCart.length }} sản phẩm trong giỏ hàng\r\n      </div>\r\n      <div class=\"cart-body\">\r\n        <ProductCart\r\n          v-for=\"item in productCart\"\r\n          :key=\"item.ProductID\"\r\n          :dataItem=\"item\"\r\n        />\r\n        <div class=\"price-area tw-w-full\">\r\n          <div class=\"payment-total tw-p-4 tw-w-2/5 tw-ml-auto\">\r\n            <div class=\"price-total tw-mt-1 tw-flex tw-justify-between\">\r\n              <span>Tổng tiền:</span\r\n              ><span>{{ $commonFn.formatMoney(priceTotal.toString()) }}</span>\r\n            </div>\r\n            <div\r\n              class=\"promotion-price-total tw-mt-1 tw-flex tw-justify-between\"\r\n            >\r\n              <span>Giảm:</span\r\n              ><span\r\n                >{{ promotionPrice !== 0 ? \"- \" : \"\"\r\n                }}{{\r\n                  $commonFn.formatMoney(\r\n                    (priceTotal - promotionPrice).toString()\r\n                  )\r\n                }}</span\r\n              >\r\n            </div>\r\n            <div\r\n              class=\"payment tw-mt-1 tw-flex tw-justify-between tw-font-bold\"\r\n            >\r\n              <span>Cần thanh toán:</span>\r\n              <span>{{\r\n                $commonFn.formatMoney(promotionPrice.toString())\r\n              }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"order-form tw-w-4/5 tw-mt-6\">\r\n          <el-form\r\n            :model=\"modelForm\"\r\n            :rules=\"rules\"\r\n            ref=\"ruleForm\"\r\n            label-width=\"120px\"\r\n            label-position=\"top\"\r\n            class=\"demo-ruleForm\"\r\n          >\r\n            <el-form-item prop=\"Gender\">\r\n              <el-radio v-model=\"modelForm.Gender\" :label=\"0\">Anh</el-radio>\r\n              <el-radio v-model=\"modelForm.Gender\" :label=\"1\">Chị</el-radio>\r\n            </el-form-item>\r\n            <div class=\"tw-flex tw-justify-between\">\r\n              <el-form-item\r\n                class=\"tw-flex-1 tw-mr-4\"\r\n                :label=\"$t('Input.FullName')\"\r\n                prop=\"FullName\"\r\n              >\r\n                <el-input\r\n                  v-model=\"modelForm.FullName\"\r\n                  :placeholder=\"$t('Input.FullNameInput')\"\r\n                />\r\n              </el-form-item>\r\n              <el-form-item\r\n                class=\"tw-w-52\"\r\n                :label=\"$t('Input.PhoneNumber')\"\r\n                prop=\"PhoneNumber\"\r\n              >\r\n                <el-input\r\n                  v-model=\"modelForm.PhoneNumber\"\r\n                  :placeholder=\"$t('Input.PhoneNumberInput')\"\r\n                />\r\n              </el-form-item>\r\n            </div>\r\n            <el-form-item :label=\"$t('Input.Email')\" prop=\"Email\">\r\n              <el-input\r\n                v-model=\"modelForm.Email\"\r\n                :placeholder=\"$t('Input.EmailInput')\"\r\n              />\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n      </div>\r\n      <div class=\"cart-footer mt-4 tw-pt-5 tw-text-center\">\r\n        <el-button class=\"order-btn\" @click=\"orderProduct\"\r\n          >Hoàn tất đặt hàng</el-button\r\n        >\r\n      </div>\r\n    </div>\r\n    <EmptyCart v-else />\r\n    <SucessPopup :customer=\"customer\" :productCart=\"productCart\" ref=\"popup\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ProductCart from \"@/components/client/views/product-cart/product-info.vue\";\r\nimport EmptyCart from \"@/components/client/views/product-cart/data-empty.vue\";\r\nimport SucessPopup from \"@/components/client/views/product-cart/sucess-popup\";\r\nimport { mapState, mapActions, mapMutations } from \"vuex\";\r\nexport default {\r\n  components: {\r\n    ProductCart,\r\n    EmptyCart,\r\n    SucessPopup,\r\n  },\r\n  data() {\r\n    return {\r\n      modelForm: {},\r\n      rules: {\r\n        FullName: [\r\n          { required: true, message: \"Hãy nhập thông tin!\", trigger: \"blur\" },\r\n          { min: 3, message: \"Tên tối thiểu 3 kí tự\", trigger: \"blur\" },\r\n        ],\r\n        PhoneNumber: [\r\n          { required: true, message: \"Hãy nhập thông tin!\", trigger: \"blur\" },\r\n        ],\r\n        Gender: [\r\n          { required: true, message: \"Hãy nhập thông tin!\", trigger: \"blur\" },\r\n        ],\r\n        Email: [\r\n          // {validator:validateEmail,trigger: 'blur'}\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(\"cart\", [\"productCart\", \"productCartLength\"]),\r\n    ...mapState(\"customer\", [\"customer\"]),\r\n\r\n    /**\r\n     * Tổng tiền\r\n     */\r\n    priceTotal() {\r\n      const me = this;\r\n      return me.productCart.reduce((total, current) => {\r\n        debugger\r\n        return total + (current.ProductAttributes[0].Price*current.ProductAttributes[0].Quantity);\r\n      }, 0);\r\n    },\r\n    /**\r\n     * Tổng tiền\r\n     */\r\n    promotionPrice() {\r\n      const me = this;\r\n      return me.productCart.reduce((total, current) => {\r\n        return total + current.ProductAttributes[0].PromotionPrice*current.ProductAttributes[0].Quantity;\r\n      }, 0);\r\n    },\r\n  },\r\n  created() {\r\n    const me = this;\r\n\r\n    if (\r\n      me.productCart.length === 0 &&\r\n      localStorage.getItem(\"productCart\") != \"\" &&\r\n      localStorage.getItem(\"productCart\") != null\r\n    ) {\r\n      me.setProductCart(JSON.parse(localStorage.getItem(\"productCart\")));\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations(\"cart\", [\"setProductCartLength\", \"setProductCart\"]),\r\n    ...mapActions(\"order\", [\"insertOrder\"]),\r\n    ...mapActions(\"customer\", [\"getCustomerByPhoneNumber\", \"insertCustomer\"]),\r\n    orderProduct() {\r\n      const me = this;\r\n      me.$refs[\"ruleForm\"].validate(async (valid) => {\r\n        if (valid) {\r\n          const h = this.$createElement;\r\n          await me.getCustomerByPhoneNumber({\r\n            phoneNumber: me.modelForm.PhoneNumber,\r\n          });\r\n          if (!me.customer) {\r\n            const paramCustomer = {\r\n              CustomerName: me.modelForm.FullName,\r\n              Email: me.modelForm.Email,\r\n              PhoneNumber: me.modelForm.PhoneNumber,\r\n            };\r\n\r\n            await me\r\n              .insertCustomer(paramCustomer)\r\n              .then((res) => {\r\n                if (res) {\r\n                  me.getCustomerByPhoneNumber({\r\n                    phoneNumber: me.modelForm.PhoneNumber,\r\n                  });\r\n                } else {\r\n                  this.$notify.error({\r\n                    title: me.$t(\"Notify.Error\"),\r\n                    message: h(\r\n                      \"i\",\r\n                      { style: \"color: teal\" },\r\n                      me.$t(\"Notify.HasError\")\r\n                    ),\r\n                  });\r\n                }\r\n              })\r\n              .catch((e) => {\r\n                this.$notify.error({\r\n                  title: me.$t(\"Notify.Error\"),\r\n                  message: h(\r\n                    \"i\",\r\n                    { style: \"color: teal\" },\r\n                    me.$t(\"Notify.HasError\")\r\n                  ),\r\n                });\r\n              });\r\n          }\r\n          var params = {\r\n            order: {\r\n              CustomerID: me.customer.CustomerID,\r\n              TotalPrice: me.promotionPrice,\r\n            },\r\n            orderDetails: [\r\n              ...me.productCart.map((item) => {\r\n                return {\r\n                  ProductAttributeID:\r\n                    item.ProductAttributes[0].ProductAttributeID,\r\n                  Quantity: item.Quantity,\r\n                  UnitPrice: item.ProductAttributes[0].PromotionPrice,\r\n                };\r\n              }),\r\n            ],\r\n          };\r\n\r\n          me.insertOrder(params)\r\n            .then((res) => {\r\n              if (res) {\r\n                me.$notify({\r\n                  title: me.$t(\"Notify.Success\"),\r\n                  message: h(\r\n                    \"i\",\r\n                    { style: \"color: teal\" },\r\n                    me.$t(\"Notify.InsertSuccess\", { object: \"đơn hàng\" })\r\n                  ),\r\n                  type: \"success\",\r\n                });\r\n              } else {\r\n                me.$notify({\r\n                  title: me.$t(\"Notify.Error\"),\r\n                  message: h(\r\n                    \"i\",\r\n                    { style: \"color: teal\" },\r\n                    me.$t(\"Notify.HasError\")\r\n                  ),\r\n                  type: \"error\",\r\n                });\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              me.$notify({\r\n                title: me.$t(\"Notify.Error\"),\r\n                message: h(\r\n                  \"i\",\r\n                  { style: \"color: teal\" },\r\n                  me.$t(\"Notify.HasError\")\r\n                ),\r\n                type: \"error\",\r\n              });\r\n            });\r\n          localStorage.setItem(\"productCart\", []);\r\n          localStorage.setItem(\"productCartLength\", 0);\r\n          me.$refs.popup.setModel(true);\r\n        } else {\r\n          alert(\"v\");\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.order-btn {\r\n  @apply tw-bg-red-500 tw-text-white !important;\r\n}\r\n</style>\r\n<style lang=\"scss\" scoped>\r\n@import \"@/styles/mixins/mixins.scss\";\r\n\r\n.cart-container {\r\n  .cart-header {\r\n    border-bottom: $default-border;\r\n  }\r\n  .cart-body {\r\n    .order-form {\r\n      .fullname,\r\n      .phone-number {\r\n        width: calc(50% - 8px);\r\n      }\r\n    }\r\n    .price-area {\r\n      border-bottom: $default-border;\r\n      .payment-total {\r\n        font-size: 13px;\r\n      }\r\n    }\r\n  }\r\n  .cart-footer {\r\n    border-top: $default-border;\r\n  }\r\n}\r\n</style>"]}]}