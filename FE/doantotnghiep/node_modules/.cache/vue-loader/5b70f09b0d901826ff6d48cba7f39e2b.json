{"remainingRequest":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\src\\components\\client\\components\\product-detail\\index.vue?vue&type=template&id=64ab4357&scoped=true&","dependencies":[{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\src\\components\\client\\components\\product-detail\\index.vue","mtime":1653017910950},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Nam4\\Ki2\\DoAnTotNghiep\\FE\\doantotnghiep\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}